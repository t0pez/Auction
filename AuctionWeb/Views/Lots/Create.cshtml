@model AuctionWeb.ViewModels.Lots.LotCreateViewModel

@{
    ViewBag.Title = "Create new lot";
}

<h2 class="mt-3">Create</h2>


@Scripts.Render("~/bundles/jqueryval")


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="">

        <h4>Here you can create a new lot for auction</h4>

        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">

            <div class="form-floating mb-3 col-4">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name", @style = "min-width: 100%" } })
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "ps-4" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-floating mb-3 col-8">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @placeholder = "Some placeholder", @style = "min-width: 100%" })
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "ps-4" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="row">

            <div class="col-md form-floating mb-3">
                
                @Html.DropDownListFor(model => model.Currency, ViewBag.Currencies as SelectList, new {@class = "form-select", @style = "min-width: 100%"})
                @Html.LabelFor(model => model.Currency, htmlAttributes: new {@class = "form-label col-md-2 ps-4"})
                @Html.ValidationMessageFor(model => model.Currency, "", new {@class = "text-danger"})
            </div>

            <div class="col-md form-floating mb-3">
                @Html.EditorFor(model => model.StartPrice, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name", @style = "min-width: 100%" } })
                @Html.LabelFor(model => model.StartPrice, htmlAttributes: new { @class = "ps-4" })
                @Html.ValidationMessageFor(model => model.StartPrice, "", new { @class = "text-danger" })
            </div>

            <div class="col-md form-floating mb-3">
                @Html.EditorFor(model => model.MinStepPrice, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name", @style = "min-width: 100%" } })
                @Html.LabelFor(model => model.MinStepPrice, htmlAttributes: new { @class = "ps-4" })
                @Html.ValidationMessageFor(model => model.MinStepPrice, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="row">
            <div class="form-floating col-md mb-3">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name", @style = "min-width: 100%" } })
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "ps-4" })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>

            <div class="form-floating col-md mb-3">
                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name", @style = "min-width: 100%" } })
                @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "ps-4" })
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>

            <div class="form-floating col-md mb-3">
                @Html.EditorFor(model => model.ProlongationTime, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name", @style = "min-width: 100%" } })
                @Html.LabelFor(model => model.ProlongationTime, htmlAttributes: new { @class = "ps-4" })
                @Html.ValidationMessageFor(model => model.ProlongationTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3">
            @Html.ActionLink("Back to List", "Index", new { area = "" }, new { @class = "btn btn-outline-secondary" })

            <button type="submit" class="btn btn-primary">Create lot</button>
        </div>
        
        <div>
            
        </div>
    </div>
}

