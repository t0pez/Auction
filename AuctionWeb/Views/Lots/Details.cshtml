@using AuctionBLL.Enums
@using AuctionWeb.Extensions.ViewModel
@using Microsoft.AspNet.Identity
@model AuctionWeb.ViewModels.Lots.LotDetailsViewModel

@{
    ViewBag.Title = "Details";
}

<h2 class="mt-3">Details</h2>
<h2>@Model.Status.ToString()</h2>
<div>
    
    <hr/>

    <div class="row">

        <div class="col-6">
            
            <div class="mb-3">
                <div>
                    @Html.LabelFor(model => model.StartDate, "Start date:", new { @class = "form-label fw-bolder" })
                    @Html.DisplayFor(model => model.StartDate)
                </div>

                <div>
                    @Html.LabelFor(model => model.EndDate, "End date:", new { @class = "form-label fw-bolder" })
                    @if (Model.EndDate is null)
                    {
                        <text>Missing</text>
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.EndDate)
                    }
                </div>

                <div>
                    @Html.LabelFor(model => model.ProlongationTime, "Prolongation time:", new { @class = "form-label fw-bolder" })
                    @Html.DisplayFor(model => model.ProlongationTime)
                </div>

                <div>
                    @Html.LabelFor(model => model.StartPrice, "Start price:", new { @class = "form-label fw-bolder" })
                    @Html.DisplayFor(model => model.StartPrice.Amount)
                    @Html.DisplayFor(model => model.StartPrice.Currency.IsoName)
                </div>
                
                <div>
                    @Html.LabelFor(model => model.ActualPrice, "Actual price:", new { @class = "form-label fw-bolder" })
                    @Html.DisplayFor(model => model.ActualPrice.Amount)
                    @Html.DisplayFor(model => model.ActualPrice.Currency.IsoName)
                </div>
                
                <div>
                    @Html.LabelFor(model => model.MinStepPrice, "Minimal step price:", new { @class = "form-label fw-bolder" })
                    @Html.DisplayFor(model => model.MinStepPrice.Amount)
                    @Html.DisplayFor(model => model.MinStepPrice.Currency.IsoName)
                </div>
                
            </div>

            @{
                var userId = User.Identity.GetUserId();
                if (userId != Model.Owner.Id)
                {

                    if (Model.Participants.Select(user => user.Id).Contains(userId) == false
                        && (Model.Status == LotStatus.Created || Model.Status == LotStatus.Opened))
                    {

                        using (Html.BeginForm("SetUserAsParticipant", "Lots", FormMethod.Post))
                        {
                            <div class="d-none">
                                <input class="" id="lotId" name="lotId" value="@Model.Id" type="text">
                            </div>

                            <div class="mb-3">
                                <button type="submit" class="btn btn-primary">Set self as participant</button>
                            </div>
                        }

                    }
                    else if(Model.Status == LotStatus.Opened && Model.UserCanMakeStep(userId))
                    {
                        using (Html.BeginForm("SetNewPrice", "Lots", FormMethod.Post))
                        {

                            var newPrice = 0m;

                            <div class="row">

                                <div class="d-none">
                                    <input class="" id="lotId" name="lotId" value="@Model.Id" type="text">
                                </div>

                                <div class="form-floating mb-3 col-md-6">
                                    @Html.Editor(nameof(newPrice), new {htmlAttributes = new {@class = "form-control", @placeholder = "New price"}})
                                    @Html.Label(nameof(newPrice), htmlAttributes: new {@class = " "})
                                </div>

                                <div class="mb-3 col-md-4">
                                    <button type="submit" class="btn btn-primary">Make step</button>
                                </div>
                            </div>
                        }
                    }
                }
            }

        </div>

        <div class="col-6">

            <div class="">
                @Html.LabelFor(model => model.Name, "Name:", new {@class = "form-label fw-bolder"})
                @Html.DisplayFor(model => model.Name)
            </div>

            <div class="">
                @Html.LabelFor(model => model.Description, "Description:", new {@class = "form-label fw-bolder"})
                @Html.DisplayFor(model => model.Description)
            </div>
            
            <div class="row mb-3">
                <div class="col-md-6 align-self-center">
                    @Html.LabelFor(model => model.Owner, "Owner:", new { @class = "form-label fw-bolder" })
                    @Html.DisplayFor(model => model.Owner.FirstName)
                    @Html.DisplayFor(model => model.Owner.LastName)
                </div>
                
                <div class="col-md ">
                    @Html.ActionLink("View account", "Details", "Users", new { userId = Model.Owner.Id }, new { @class = "btn btn-outline-secondary col-md offset-md-4" })
                </div>
                <hr class="mt-2"/>
            </div>
            @if (Model.Acquirer != null)
            {
                
                var acquirerLabelText = "";
                acquirerLabelText = Model.Status == LotStatus.Opened ? "Lot leader:" : "Acquirer:";
                
                <div class="row mb-3">
                    <div class="col-md-6 align-self-center">
                        @Html.LabelFor(model => model.Acquirer, acquirerLabelText, new {@class = "form-label fw-bolder"})
                        @Html.DisplayFor(model => model.Acquirer.FirstName)
                        @Html.DisplayFor(model => model.Acquirer.LastName)
                    </div>

                    <div class="col-md ">
                        @Html.ActionLink("View account", "Details", "Users", new {userId = Model.Acquirer.Id}, new {@class = "btn btn-outline-secondary col-md offset-md-4"})
                    </div>
                    <hr class="mt-2"/>
                </div>
            }
        </div>

    </div>
</div>
<p>
    @Html.ActionLink("Back to List", "Index")
</p>
